import argparse
import subprocess
import os
import sys


def run_script(script_name, script_args):
    python_executable = sys.executable
    script_dir = os.path.dirname(__file__)  # 获取脚本所在目录
    script_path = os.path.join(script_dir, '..', 'src', script_name)  # 构建脚本的完整路径
    subprocess.run([python_executable, script_path] + script_args) 

def main():
    parser = argparse.ArgumentParser(
        description="""
        CPStools command line tool
        Author: Xu Wenbo
        Org:    China Pharmaceutical University
        Email:  xwb7533@163.com""",
        formatter_class=argparse.RawDescriptionHelpFormatter)
    subparsers = parser.add_subparsers(title="sub-commands", help='sub-command help')

    # 添加子命令
    gbcheck_parser = subparsers.add_parser('gbcheck', help='Check annotated file and Compare gene counts and difference in two GenBank files.')
    gbcheck_parser.add_argument('-r', '--ref_file', help='reference GenBank file')
    gbcheck_parser.add_argument('-i', '--test_file', help='testing GenBank file', required=True)
    gbcheck_parser.set_defaults(func=lambda args: run_script('gbcheck.py', sys.argv[2:]))

    info_parser = subparsers.add_parser('info', help='Statistic gene type and intron numbers from genbank files.')
    info_parser.add_argument("-i","--input_file", help="Input genbank format file")
    info_parser.add_argument("-o", "--output_file", help="output file ")
    info_parser.set_defaults(func=lambda args: run_script('information.py', sys.argv[2:]))

    Seq_parser = subparsers.add_parser('Seq', help='Adjust the Seq start in chloroplast genomes.')
    Seq_parser.add_argument("-d", "--work_dir", help="Input directory of fasta files")
    #Seq_parser.add_argument("-o", "--save_dir", help="Output directory for save files")
    Seq_parser.add_argument("-f", "--info_file", help="file of the information of the fasta file four regions")
    Seq_parser.add_argument("-m", "--mode", choices=['SSC', 'LSC', 'RP'],
        help="Mode: SSC for adjust_SSC_forward, LSC for adjust_start_to_LSC, RP for adjust sequence to reverse_complement")
    Seq_parser.set_defaults(func=lambda args: run_script('seq_adj.py', sys.argv[2:]))

    ir_parser = subparsers.add_parser('IR', help='Identify four regions in chloroplast genomes.')
    ir_parser.add_argument('-i', '--input_file', help='fasta/GenBank format file', required=True)
    ir_parser.set_defaults(func=lambda args: run_script('IR.py', sys.argv[2:]))

    
    pi_parser = subparsers.add_parser('Pi', help='Calculate Pi valus from Genbank files and sort as cp order.')
    pi_parser.add_argument("-d", "--work_dir", required=True, help="Input directory of genbank files")
    pi_parser.add_argument("-m", "--mafft_path", help="Path to MAFFT executable if not in environment path")
    pi_parser.set_defaults(func=lambda args: run_script('Pi_combine.py', sys.argv[2:]))

    RSCU_parser = subparsers.add_parser('RSCU', help='Get RSCU values from genbank files.')
    RSCU_parser.add_argument("-d", "--work_dir", help="Input directory of genbank files")
    RSCU_parser.add_argument('-l', '--filter_length', help='CDS filter length, default is 300', type=int)
    RSCU_parser.set_defaults(func=lambda args: run_script('RSCU.py', sys.argv[2:]))

    SSRs_parser = subparsers.add_parser('SSRs', help='Identify SSRs in chloroplast genomes and mark their types.')
    SSRs_parser.add_argument('-i', '--input_file', help='GenBank format file', required=True)
    SSRs_parser.add_argument('-k', '--kmer_length', help='SSRs length, default is 10,6,5,4,4,4')
    SSRs_parser.set_defaults(func=lambda args: run_script('SSRS_annotation.py', sys.argv[2:]))

    converse_parser = subparsers.add_parser('converse', help='Converse genbank format files to fasta/tbl/mVISTA format.')
    converse_parser.add_argument("-d", "--input_dir", help="Input path of genbank file")
    converse_parser.add_argument("-m", "--mode", choices=['fasta', 'mVISTA', 'tbl'],
        help="Mode: fasta for converse genbank format file into fasta format file;\n"
         "mVISTA for converse genbank format file into mVISTA format file;\n"
         "tbl for converse genbank format file into tbl format file")
    converse_parser.set_defaults(func=lambda args: run_script('converse.py', sys.argv[2:]))

    LSR_parser = subparsers.add_parser('LSRs', help='Annotate LSRs in chloroplast genomes.')
    LSR_parser.add_argument('-i', '--input_file', help='GenBank format file', required=True)
    LSR_parser.set_defaults(func=lambda args: run_script('LSR_annotation.py', sys.argv[2:]))

    phy_parser = subparsers.add_parser('phy', help='Extract and sort common cds/protein sequences for phylogenetic analysis from multi-gbfiles.')
    phy_parser.add_argument("-d", "--input_dir", help="Input the directory of genbank files")
    phy_parser.add_argument("-m", "--mode", choices=['cds', 'pro'],
        help="Mode: cds for common cds sequences; pro for common protein sequences")
    phy_parser.set_defaults(func=lambda args: run_script('phy_built.py', sys.argv[2:]))

    args = parser.parse_args()
    if hasattr(args, 'func'):
        args.func(args)
    else:
        parser.print_help()

if __name__ == "__main__":
    main()
