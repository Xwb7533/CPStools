#!/Users/xuwenbo/anaconda3/bin/python
import argparse
import subprocess
import os
import sys

def run_script(script_name):
    python_executable = sys.executable
    script_dir = os.path.dirname(__file__)  # 获取脚本所在目录
    script_path = os.path.join(script_dir, '..', 'src', script_name)  # 构建脚本的完整路径
    subprocess.run(['python', script_path])  # 使用 Python 执行脚本

def main():
    parser = argparse.ArgumentParser(description="CPStools command line tool")
    subparsers = parser.add_subparsers(title="commands", help="sub-command help")

    # 添加子命令

    gbcheck_parser = subparsers.add_parser('gbcheck', help='Run gbcheck.py')
    gbcheck_parser.set_defaults(func=lambda args: run_script('gbcheck.py'))

    info_parser = subparsers.add_parser('info', help='Run information.py')
    info_parser.set_defaults(func=lambda args: run_script('information.py'))

    Seq_parser = subparsers.add_parser('seq_adj', help='Run seq_adj.py')
    Seq_parser.set_defaults(func=lambda args: run_script('seq_adj.py'))

    ir_parser = subparsers.add_parser('IR', help='Run IR.py')
    ir_parser.set_defaults(func=lambda args: run_script('IR.py'))

    pi2_parser = subparsers.add_parser('Pi_2', help='Run Pi_2.py')
    pi2_parser.set_defaults(func=lambda args: run_script('Pi_2.py'))

    pi1_parser = subparsers.add_parser('Pi_1', help='Run Pi_1.py')
    pi1_parser.set_defaults(func=lambda args: run_script('Pi_1.py'))

    RSCU_parser = subparsers.add_parser('RSCU', help='Run RSCU.py')
    RSCU_parser.set_defaults(func=lambda args: run_script('RSCU.py'))

    SSRs_parser = subparsers.add_parser('SSRs', help='Run SSRS_annotation.py')
    SSRs_parser.set_defaults(func=lambda args: run_script('SSRS_annotation.py'))

    converse_parser = subparsers.add_parser('converse', help='Run converse.py')
    converse_parser.set_defaults(func=lambda args: run_script('converse.py'))

    LSR_parser = subparsers.add_parser('LSRs', help='Run LSR_annotation.py')
    LSR_parser.set_defaults(func=lambda args: run_script('LSR_annotation.py'))

    phy_parser = subparsers.add_parser('phy', help='Run phy_built.py')
    phy_parser.set_defaults(func=lambda args: run_script('phy_built.py'))

    # 为其他脚本重复以上步骤...

    args = parser.parse_args()
    if hasattr(args, 'func'):
        args.func(args)
    else:
        parser.print_help()

if __name__ == "__main__":
    main()
